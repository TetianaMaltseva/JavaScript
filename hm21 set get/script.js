// //***************************ГЕТЕРИ І СЕТЕРИ ВЛАСИТВОСТЕЙ
    
// Вправа 1. Аксесор із журналом
// Створи об'єкт logger, який:
// має приховану змінну _message,
// має гетер message, який повертає _message,
// має сетер message, який перед встановленням нового значення виводить у консоль:
// "Новий запис: <значення>".


// Вправа 2. Дескриптор аксесора (тільки читання)
// Створи об'єкт clock, у якого:
// є властивість time, яка доступна лише для читання (тобто має тільки гетер),
// повертає поточний час у форматі "HH:MM" (з використанням Date),
// не з'являється при переборі for...in.
let clock ={
  time: 1,
  
}

// //*****************************************ТИП ДАНИХ SYMBOL
// Вправа 3: Створення символів
// Питання:
// Що буде виведено в консоль? Поясніть чому.

 let sym1 = Symbol("id");
let sym2 = Symbol("id");

 console.log(sym1 === sym2); // false
//  Символы гарантированно уникальны.
//  Даже если мы создадим множество символов с одинаковым описанием,
//  это всё равно будут разные символы. Описание – это просто метка,
//  которая ни на что не влияет.

// Вправа 4: Символ як ключ
// Питання:
// Що буде виведено в консоль? Поясніть чому.

 let id = Symbol("id");
 let user = {
 name: "Alice",
 [id]: 123
};

console.log(user[id]); //123
//Если мы хотим использовать символ при литеральном объявлении объекта {...},
//  его необходимо заключить в квадратные скобки.


// Вправа 5: Прихованість символів
// Питання:
// Що виведе цей цикл? Поясніть чому


 let secret = Symbol("secret");
 let person = {
 name: "Bob",
 age: 25,
 [secret]: "hidden info"
 };

 for (let key in person) {
 console.log(key); 
 } // name, age
//  Символы позволяют создавать «скрытые» свойства объектов.
//  Свойства, чьи ключи – символы, не перебираются циклом for..in.


// Вправа 6: Symbol.for та Symbol.keyFor
// Питання:
// Що буде виведено в консоль? Поясніть чому.


 let globalSymbol = Symbol.for("shared");// читаем символ из глобального реестра и записываем его в переменную
 let sameSymbol = Symbol.for("shared"); //читаем его снова и записываем в другую переменную 

 console.log(globalSymbol === sameSymbol); // true это один и тот же символ
 console.log(Symbol.keyFor(sameSymbol));// shared  Symbol.keyFor(key) 
// принимает глобальный символ и возвращает его имя.


// Вправа 7: Порівняння символу і рядка
// Питання:
// Що виведе код? Поясніть чому.


let sym3 = Symbol("id");
 console.log(sym3 == "id"); // false
 //Символы гарантированно уникальны. Даже если мы создадим множество символов с одинаковым описанием,
 //  это всё равно будут разные символы. Описание – это просто метка, которая ни на что не влияет.


// Вправа 8: Виведення символу
// Питання:
// Що буде виведено? Поясніть чому.


 let sym4 = Symbol("test");
 console.log(String(sym4)); // Symbole(test)
 // Символы не преобразуются автоматически в строки, eсли хотим вывести символ,
 //  то необходимо его явно преобразовать 