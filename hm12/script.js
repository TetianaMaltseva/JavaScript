  /********************************VAR,LET,CONST*************************************************/
  //   –ó–∞–≤–¥–∞–Ω–Ω—è 1: –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ (var vs let)
  //   –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥? –ü–æ—è—Å–Ω—ñ—Ç—å —á–æ–º—É.

    if (true) {
       var a = 10;
         let b = 20;
     }
     console.log(a); //10 
  //   console.log(b); is not defined. 
  // –¢–æ–º—É —â–æ, let –º–∞—î –±–ª–æ—á–Ω—É –æ–±–ª–∞—Å—Ç—å –±–∞—á–µ–Ω–Ω—è, –∞ var —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—É


  //   –ó–∞–≤–¥–∞–Ω–Ω—è 2: –ß–∏ –≤–∏–∫–ª–∏—á–µ –ø–æ–º–∏–ª–∫—É? (const)
  //   –ß–∏ —Å–ø—Ä–∞—Ü—é—î —Ü–µ–π –∫–æ–¥? –Ø–∫—â–æ –Ω—ñ, —á–æ–º—É?

     const d = 50;
     // d = 100; Hi, –±—É–¥–µ –ø–æ–º–∏–ª–∫–∞, —Ç–∞–∫ —è–∫ const –Ω–µ –¥–æ–∑–≤–æ–ª—è—î –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    console.log(d);



  //   –ó–∞–≤–¥–∞–Ω–Ω—è 3: –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∫–æ–¥—É (const —ñ –æ–±'—î–∫—Ç–∏)
  //   –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–º—ñ–Ω–∏—Ç–∏, —â–æ–± –∫–æ–¥ –Ω–µ –≤–∏–∫–ª–∏–∫–∞–≤ –ø–æ–º–∏–ª–∫—É?

     const user = { name: "Nick" };
      // user = { name: "Alex" };
     user.name = "Alex";
     console.log(user);
   



  /********************************–°–¢–†–Ü–õ–ö–û–í–Ü –§–£–ù–ö–¶–Ü–á*************************************************/

  // –ó–∞–≤–¥–∞–Ω–Ω—è 1: –ß–æ–º—É —Ü–µ–π –∫–æ–¥ –Ω–µ –ø—Ä–∞—Ü—é—î? –Ø–∫ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏ –∑–≤–∏—á–∞–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é?

  //  const person = {
  //      name: "Alice",
  //     greet: () => {
  //          console.log(`Hello, my name is ${this.name}`);
  //      }
  // };
  // person.greet(); 
  // ‚ùì –©–æ –≤–∏–≤–µ–¥–µ –∫–æ–¥? –Ø–∫ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏? Hello, my name is . –°—Ç—Ä—ñ–ª–∫–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –º–∞—î —Å–≤–æ–≥–æ this, –∞ —É—Å–ø–∞–¥–∫–æ–≤—É—î –π–æ–≥–æ.
  const person = {
          name: "Alice",
          greet() {
              console.log(`Hello, my name is ${this.name}`);
        }
     };
     person.greet(); 


  // –ó–∞–≤–¥–∞–Ω–Ω—è 2: –†–æ–±–æ—Ç–∞ –∑ –º–∞—Å–∏–≤–∞–º–∏
  // –©–æ –≤–∏–≤–µ–¥–µ —Ü–µ–π –∫–æ–¥? –ß–æ–º—É
//[1*1,2*2,3*3,4*4]=[1,4,9,16] –ú–µ—Ç–æ–¥ map() —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤—ã–∑–æ–≤–∞ 
// –≤–∫–∞–∑–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞ –∫–æ–∂–Ω–æ–º –µ–ª–µ–º–µ–Ω—Ç—ñ –¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å–∏–≤–∞ –∏ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ü—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó.

   const numbers = [1, 2, 3, 4];
  const squares = numbers.map(num => num * num);
   console.log(squares);


  // –ó–∞–≤–¥–∞–Ω–Ω—è 3: –ß–æ–º—É new –Ω–µ –ø—Ä–∞—Ü—é—î?
  // –©–æ —Å—Ç–∞–Ω–µ—Ç—å—Å—è –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —Ü—å–æ–≥–æ –∫–æ–¥—É? –Ø–∫ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏ –∑–≤–∏—á–∞–π–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é?
  //  –°—Ç—Ä—ñ–ª–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑ new, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∑–≤–∏—á–∞–π–Ω—É —Ñ—É–Ω–∫—Ü–∏—é

  // const Person = (name) => {
  //     this.name = name;
  // };
  // const user = new Person("Alice");
  function Person (name) {
        this.name = name;
   };
   const user1 = new Person("Alice");
   console.log(user1);

  //*************************************************   –í–ø—Ä–∞–≤–∏ –Ω–∞ —à–∞–±–ª–æ–Ω–Ω—ñ —Ä—è–¥–∫–∏ (Template Literals) –≤ ES6
  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 1: –ë–∞–≥–∞—Ç–æ—Ä—è–¥–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç
  // –°—Ç–≤–æ—Ä—ñ—Ç—å —Ä—è–¥–æ–∫, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —Ç–∞–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —à–∞–±–ª–æ–Ω–Ω—ñ —Ä—è–¥–∫–∏ (–±–µ–∑ \n —ñ +):
const winners = `
 1. –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å - –û–ª–µ–∫—Å—ñ–π
 2. –î—Ä—É–≥–µ –º—ñ—Å—Ü–µ - –ú–∞—Ä–∏–Ω–∞
 3. –¢—Ä–µ—Ç—î –º—ñ—Å—Ü–µ - –°–µ—Ä–≥—ñ–π`;
 console.log(winners);

  // –†–µ–∑—É–ª—å—Ç–∞—Ç–∏:
  // 1. –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å - –û–ª–µ–∫—Å—ñ–π
  // 2. –î—Ä—É–≥–µ –º—ñ—Å—Ü–µ - –ú–∞—Ä–∏–Ω–∞
  // 3. –¢—Ä–µ—Ç—î –º—ñ—Å—Ü–µ - –°–µ—Ä–≥—ñ–π


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 2: –í—Å—Ç–∞–≤–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–π —É —à–∞–±–ª–æ–Ω–Ω—ñ —Ä—è–¥–∫–∏
  // –Ñ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–∫. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —ó—ó –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ —Ä—è–¥–∫–∞:

   function getYear() {
       return new Date().getFullYear();
   }
  console.log(`–ó–∞—Ä–∞–∑ ${getYear()}` );


  // –ó–∞—Ä–∞–∑ 2025 —Ä—ñ–∫.


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 3: –¢–µ–≥–æ–≤–∞–Ω—ñ —à–∞–±–ª–æ–Ω–∏ (Tagged Templates)
  // –©–æ –≤–∏–≤–µ–¥–µ –∫–æ–¥? –ß–æ–º—É

   function tag(strings, value) {
       return `${strings[0]}${value.toUpperCase()}${strings[1]}`;
   }

   const user2 = "nick";
   console.log(tag`–ü—Ä–∏–≤—ñ—Ç, ${user2}, —è–∫ —Å–ø—Ä–∞–≤–∏?`); // –ü—Ä–∏–≤—ñ—Ç, NICK, —è–∫ —Å–ø—Ä–∞–≤–∏?
   //–í –Ω–∞—Å —ç —à–∞–±–ª–æ–Ω–∞ —Å—Ç—Ä–æ–∫–∞  —è–∫–∞ –ø–µ—Ä–µ–¥–∞—Å—Ç—å –≤ —Ñ—É–Ω–∫—Ü—ñ—é –øe—Ä—à–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç strings - 
   // –º–∞—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤–∏—Ö —á–∞—Å—Ç–µ–π("–ø—Ä–∏–≤—ñ—Ç", "—è–∫ —Å–ø—Ä–∞–≤–∏") —Ç–∞ –¥—Ä—É–≥–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç value (user). 
//–¢.–µ –º–∏ –æ—Ç—Ä–∏–º—É–µ–º–æ strings[0] - –ø—Ä–∏–≤—ñ—Ç,  –¥–∞–ª–∏ value  –≤ –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ NICK
//  —Ç–∞ strings [1] —è–∫ —Å–ø—Ä–∞–≤–∏


  //************************************ –í–ø—Ä–∞–≤–∏ –Ω–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—é –º–∞—Å–∏–≤—ñ–≤ —ñ –æ–±'—î–∫—Ç—ñ–≤
  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 1: –ü—Ä–æ–ø—É—Å–∫ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É
  // –Ñ –º–∞—Å–∏–≤:

   const colors = ["red", "green", "blue", "yellow"];
  // –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø–µ—Ä—à–∏–π —ñ —Ç—Ä–µ—Ç—ñ–π –µ–ª–µ–º–µ–Ω—Ç–∏, –ø—Ä–æ–ø—É—Å—Ç–∏–≤—à–∏ –¥—Ä—É–≥–∏–π. 
  // (–í–ò–ö–û–†–ò–°–¢–ê–¢–ò –î–ï–°–¢–†–£–ö–¢–£–†–ò–ó–ê–¶–Ü–Æ –ú–ê–°–ò–í–Ü–í)
 const [first, ,third, ,] = colors;
 console.log(first);
 console.log(third);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 2: –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞
  // –î–∞–Ω–æ –æ–±'—î–∫—Ç:

   const user3 = {
    name1: "Alice",
    age: 25,
    country: "USA"
   };
  // –í–∏—Ç—è–≥–Ω—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è —É –∑–º—ñ–Ω–Ω—ñ name, age, country –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó.
 const{name1,age,country} = user3;
 console.log(name1);
 console.log(age);
 console.log(country);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 3: –ó–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
  // –î–∞–Ω–æ –æ–±'—î–∫—Ç, —É —è–∫–æ–º—É –Ω–µ–º–∞—î age:

   const person1 = {
     name: "Bob"
   };
  // –û—Ç—Ä–∏–º–∞–π—Ç–µ name —ñ age, –≤—Å—Ç–∞–Ω–æ–≤–∏–≤—à–∏ age –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 30.
  //  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä—ñ–∑–∞—Ü—ñ—é –æ–±'—î–∫—Ç—ñ–≤ —ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω—è–º
 const {name2, age1 = 30} = person1;
 console.log(age1);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 4: –í–∫–ª–∞–¥–µ–Ω–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è
  // –Ñ –æ–±'—î–∫—Ç:

  const employee = {
     id: 1,
     personalInfo: {
      firstName: "John",
       lastName: "Doe"
    }
   };
  // –í–∏—Ç—è–≥–Ω—ñ—Ç—å firstName —Ç–∞ lastName —É –∑–º—ñ–Ω–Ω—ñ –æ–∫—Ä–µ–º–æ. 
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≤–∫–ª–∞–¥–µ–Ω—É –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä—ñ–∑–∞—Ü—ñ—é
 const {id, personalInfo:{firstName,lastName}} = employee;
 console.log(firstName);
 console.log(lastName);


  //***************  –í–ø—Ä–∞–≤–∏ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ ...spread —Ç–∞ ...rest –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—è–º–∏

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 1: –û–±'—î–¥–Ω–∞–Ω–Ω—è –º–∞—Å–∏–≤—ñ–≤
  // –Ñ –¥–≤–∞ –º–∞—Å–∏–≤–∏:

   const arr1 = [10, 20, 30];
   const arr2 = [40, 50, 60];
  // –û–±'—î–¥–Ω–∞–π—Ç–µ arr1 —Ç–∞ arr2 —É –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ mergedArray –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ...spread.
 const arr3 = [...arr1, ...arr2];
 console.log(arr3);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 2: –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –¥–æ –æ–±'—î–∫—Ç–∞
  // –Ñ –æ–±'—î–∫—Ç:

   const car = { brand: "Toyota", model: "Corolla" };
  // –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç updatedCar, –¥–æ–¥–∞–≤—à–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å year: 2022 –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ...spread.
const updatedCar = {...car, year: 2022};
console.log(updatedCar);


  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 3: –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –º–∞—Å–∏–≤—É –∑ ...rest
  // –Ñ –º–∞—Å–∏–≤:

   const fruits = ["apple", "banana", "cherry", "date"];
  // –í–∏—Ç—è–≥–Ω—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —É –∑–º—ñ–Ω–Ω—É firstFruit, –∞ —Ä–µ—à—Ç—É —É –º–∞—Å–∏–≤ remainingFruits.
 const [firstFruit, ...remainingFruits] = fruits;
console.log(firstFruit);
console.log(remainingFruits);

  // üîπ –ó–∞–≤–¥–∞–Ω–Ω—è 4: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ...spread —É —Ñ—É–Ω–∫—Ü—ñ—ó
  // –Ñ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª:

  const numbers1 = [10, 20, 30, 40, 50];
 console.log(Math.max(...numbers1));
  // –ü–µ—Ä–µ–¥–∞–π—Ç–µ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É —É Math.max(), –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ ...spread.

//***********************************************************IMPORT,EXPORT

  // 1 –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (export default)
  // üìå –ó–∞–≤–¥–∞–Ω–Ω—è:
  // –£ —Ñ–∞–π–ª—ñ math.js —Å—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é square(n), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –∫–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞,
  //  —Ç–∞ –µ–∫—Å–ø–æ—Ä—Ç—É–π—Ç–µ —ó—ó –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º.
  //  –ü–æ—Ç—ñ–º —ñ–º–ø–æ—Ä—Ç—É–π—Ç–µ —ó—ó —É main.js —ñ –≤–∏–∫–ª–∏—á—Ç–µ –¥–ª—è —á–∏—Å–ª–∞ 4.

  // // math.js
  // // (—Ç—É—Ç –º–∞—î –±—É—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—è —ñ –µ–∫—Å–ø–æ—Ä—Ç –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)

  // // main.js
  // // (—Ç—É—Ç –º–∞—î –±—É—Ç–∏ —ñ–º–ø–æ—Ä—Ç —Ç–∞ –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó)

  // 2 –Ü–º–ø–æ—Ä—Ç –≤—Å—å–æ–≥–æ –º–æ–¥—É–ª—è (* as)
  // üìå –ó–∞–≤–¥–∞–Ω–Ω—è:
  // –Ñ –º–æ–¥—É–ª—å mathOperations.js, —è–∫–∏–π –µ–∫—Å–ø–æ—Ä—Ç—É—î —Ñ—É–Ω–∫—Ü—ñ—ó add, subtract —Ç–∞ multiply.
  // –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ –≤–µ—Å—å –º–æ–¥—É–ª—å —É calculator.js –ø—ñ–¥ —ñ–º–µ–Ω–µ–º mathOps —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é add.

  // // mathOperations.js
  // export function add(a, b) {
  //   return a + b;
  // }

  // export function subtract(a, b) {
  //   return a - b;
  // }

  // export function multiply(a, b) {
  //   return a * b;
  // }

  // // calculator.js
  // // (—Ç—É—Ç –º–∞—î –±—É—Ç–∏ —ñ–º–ø–æ—Ä—Ç –≤—Å—å–æ–≥–æ –º–æ–¥—É–ª—è —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó add)